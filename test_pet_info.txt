req.
POST
age: int
weight: int
name: str
auth_token


Resp.
{'name': name,
 'age': age,
 'daily_food':weight * 0.012,
 'daily_sleep': weight * 2.5}


Тесты:
1) Статус код 200
2) Проверка структуры json в ответе.
3) В ответе указаны коэффициенты умножения weight, напишите тесты по проверке правильности результата перемножения на коэффициент.

----------------------------------------------

{
    "age": 25,
    "daily_food": 0.6,
    "daily_sleep": 125.0,
    "name": "Olesya"
}

Tests:

pm.test("Status code is 200", function () {
    pm.response.to.have.status(200);
});


-----------------------------------------------
var schema = {
  "type": "object",
  "properties": {
    "age": {
      "type": "integer"
    },
    "daily_food": {
      "type": "number"
    },
    "daily_sleep": {
      "type": "number"
    },
    "name": {
      "type": "string"
    }
  },
  "required": [
    "age",
    "daily_food",
    "daily_sleep",
    "name"
  ]
}


const jsonData = pm.response.json();

pm.test('Schema is valid', function () {
    pm.expect(tv4.validate(jsonData, schema)).to.be.true;
});


-------------------------------------------------------
pm.test("daily food weight", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.daily_food).to.eql(pm.request.body.formdata.get("weight")*0.012);
});    


---------------------------------------------------------
pm.test("daily sleep weight", function () {
    var jsonData = pm.response.json();
    pm.expect(jsonData.daily_sleep).to.eql(pm.request.body.formdata.get("weight")*2.5);
});   



